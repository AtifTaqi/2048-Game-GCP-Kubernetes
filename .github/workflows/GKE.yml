name: Deploy-GKE

on:
  push:
    branches:
      - main

env:
  GKE_PROJECT: ${{ secrets.PROJECT.ID }}
  GKE_CLUSTER: google-cluster
  GKE_APP_NAME: game-2048
  GKE_SERVICE: game-2048
  GKE_SERVICE_ACCOUNT: googel-container-registry@gcp-atif.iam.gserviceaccount.com
  GKE_DEPLOYMENT_NAME: game-2048
  GKE_REGION: asia-south2
  GKE_ZONE: asia-south2-a
  
jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
     contents: 'read'
     id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
 # Configure Workload Identity Federation for Google Cloud
    - id: auth
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
          workload_identity_provider: projects/126557959099/locations/global/workloadIdentityPools/atif-pool
          service_account: googel-container-registry@gcp-atif.iam.gserviceaccount.com
          create_credentials_file: true

    - name: Setup Google Cloud SDK
      uses: mathieu-bour/setup-gcloud@1.3.1
      with:
       service-account-key: ${{ secrets.JSON_GCLOUD_SERVICE_ACCOUNT_JSON }} # base64-encoded service account JSON key
       confgure-docker: true
       
    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    # Build the Docker image
    - name: Build and Push
      working-directory: .
      run: |-  

       docker build -t gcr.io/gcp-atif/game-2048:${{ github.sha }} . 
       gcloud --quiet auth configure-docker
     #  docker push gcr.io/gcp-atif/game-2048:${{ github.sha }} 
  
  Deploy:
    runs-on: ubuntu-latest
    environment: prod
    needs: Build

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v1.0.1
      with:
        cluster_name: google-cluster
        project_id: gcp-atif
        location: asia-south2-a

    # Deploy the new Docker image to the GKE cluster
    - name: Deploy
      working-directory: .
      run: |-
        envsubst < namespace.yaml | kubectl apply -f -
        envsubst < deployment.yaml | kubectl apply -f -
        envsubst < service.yaml | kubectl apply -f -
